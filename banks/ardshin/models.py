# generated by datamodel-codegen:
#   filename:  sample.json
#   timestamp: 2024-12-27T07:27:59+00:00

from __future__ import annotations

from typing import Any, NotRequired, TypedDict


class FieldAttributes(TypedDict):
    operation: str
    handler: str


class TotOperation(TypedDict):
    TotIN: str
    TotOUT: dict[str, Any]


class FieldAttributes1(TypedDict):
    lang: str
    value: str


TranslationItem = TypedDict(
    'TranslationItem',
    {
        '@attributes': FieldAttributes1,
    },
)


class Status(TypedDict):
    translation: list[TranslationItem]


TranslationItem1 = TypedDict(
    'TranslationItem1',
    {
        '@attributes': FieldAttributes1,
    },
)


class Description(TypedDict):
    translation: list[TranslationItem1]


class OperationItem(TypedDict):
    valueDate: str
    amount: str
    currency: str
    equiv: str
    curequiv: str
    source: str
    time: str
    status: Status
    description: Description
    operation: str
    refnum: str
    servicetype: dict[str, Any] | str
    opertype: str
    sendemail: str
    benacnt: NotRequired[str]
    bencust: NotRequired[str]
    valuedatewithtime: str
    commission: NotRequired[dict[str, Any]]
    details: str
    origacnt: NotRequired[str]
    origcust: NotRequired[str]


class GetAccountTransactions(TypedDict):
    TotOperation: TotOperation
    Operation: list[OperationItem] | OperationItem
    rowCount: str
    errorCode: str


Model = TypedDict(
    'Model',
    {
        '@attributes': FieldAttributes,
        'parentid': str,
        'Id': str,
        'getAccountTransactions': GetAccountTransactions,
    },
)
