# generated by datamodel-codegen:
#   filename:  sample.json
#   timestamp: 2024-12-27T09:15:29+00:00

from __future__ import annotations

from typing import TypedDict


class ServiceContext(TypedDict):
    iconUrl: str
    splashUrl: str
    subIconUrl: str | None
    url: str | None
    help: str | None
    field__typename: str


class BasketItem(TypedDict):
    name: str
    price: int
    alias: str | None
    hidden: bool | None
    field__typename: str


class LinkedTransaction(TypedDict):
    status: str
    type: str | None
    totalRaw: int
    basketTotal: int
    refundsTotal: int | None
    total: int
    currency: str
    paymentMethod: str
    account: str | None
    isPlus: bool
    refunds: None
    basket: list[BasketItem]
    field__typename: str


class BasketItem1(TypedDict):
    name: str
    price: int
    alias: None
    hidden: bool
    field__typename: str


class Refund(TypedDict):
    total: str
    service: str
    currency: str
    basket: list[BasketItem1]
    field__typename: str


class BasketItem2(TypedDict):
    name: str
    price: float
    alias: str | None
    hidden: bool | None
    field__typename: str


class RootPayment(TypedDict):
    status: str
    type: None
    totalRaw: float
    basketTotal: float
    refundsTotal: float | None
    total: float
    currency: str
    paymentMethod: str
    account: str | None
    isPlus: bool
    refunds: list[Refund] | None
    basket: list[BasketItem2]
    field__typename: str


class Order(TypedDict):
    field__typename: str
    id: str
    created: str
    source: str
    service: str
    initiatorUid: None
    serviceContext: ServiceContext
    linkedPayment: None
    linkedTransactions: list[LinkedTransaction]
    rootPayment: RootPayment
    purchaseToken: list[str]


class PaymentsList(TypedDict):
    orders: list[Order]


class Data(TypedDict):
    paymentsList: PaymentsList


class ModelItem(TypedDict):
    data: Data


Model = list[ModelItem]
